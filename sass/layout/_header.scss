.header {
  position: relative;
  height: 85vh; /* 85% of the viewport height */
  background-image: linear-gradient(
      to bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero-small.jpg);
  /* On top of the screen the gradient will appear & below that the image  */

  background-size: cover;
  background-position: top;

  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(
    0 0,
    100% 0,
    100% 75vh /* 75% of viewport height */,
    0 100%
  );

  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(
      0 0,
      100% 0,
      100% 75vh /* 75% of viewport height */,
      0 100%
    );
    height: 95vh;
  }

  // RESPONSIVE IMAGES USING CSS
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), // , means OR i.e. 1st condition applies OR the 2nd one
         only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), //Becoz Safari doesn't supports 
         only screen and (min-width: 125em) { //600px/16=37.5em & 2000px/16=125em
    //dpi = Dots per inch i.e. Apple's high resolution retina screen
    //Whenever the resolution will be high then 192dpi then following code will be applied 
    //Min-width 600px becoz, if width is smaller than 600px which usually are phones,
    //then downloading a high resolution image doesn't makes sense.
    background-image: linear-gradient(
      to bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  }
  // @media (min-width: 2000px) { //When min-resolution is @1px
  //   background-image: linear-gradient(
  //     to bottom,
  //     rgba($color-primary-light, 0.8),
  //     rgba($color-primary-dark, 0.8)
  //   ),
  //   url(../img/hero.jpg);
  // } WROTE IN ABOVE CONDITION WITH ,.........................
  
  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(
      0 0,
      100% 0,
      100% 85vh /* 75% of viewport height */,
      0 100%
    );
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
